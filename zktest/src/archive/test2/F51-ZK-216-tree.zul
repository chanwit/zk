<?xml version="1.0" encoding="UTF-8"?>

<!--
Z51-3355295-tree.zul

	Purpose:
		
	Description:
		
	History:
		Sun Jan 30 17:21:10 2011, Created by jimmy

Copyright (C) 2011 Potix Corporation. All Rights Reserved.

-->
<zk>
	<html><![CDATA[
	<ul><li>Please try to open and close the tree node in the following two trees.
	Their behavior shall be exactly the same.</li>
	</ul>
	]]></html>

	<menupopup id="menupopup">
        <menuitem label="Undo"/>
        <menuitem label="Redo"/>
        <menu label="Sort">
			<menupopup>
		        <menuitem label="Sort by Name" autocheck="true"/>
		        <menuitem label="Sort by Date" autocheck="true"/>
			</menupopup>
        </menu>
	</menupopup>
	<zscript><![CDATA[
		import org.zkoss.zul.*;
		public class FileInfo {
		    public String path;
		    public String description;
		    public FileInfo(String path, String description) {
		   	    this.path = path;
		   	    this.description = description;
		    }
		    public String getPath() {
		    	return path;
		    }
		    public String getDescription() {
		    	return description;
		    }	
		}
		
		import org.zkoss.util.CollectionsX;
		
		TreeModel model = new DefaultTreeModel(
		  new DefaultTreeNode(null,
		    new DefaultTreeNode[] {
		      new DefaultTreeNode(new FileInfo("/doc", "Release and License Notes")),
		      new DefaultTreeNode(new FileInfo("/dist", "Distribution"),
		        new DefaultTreeNode[] {
		          new DefaultTreeNode(new FileInfo("/lib", "ZK Libraries"),
		            new DefaultTreeNode[] {
		              new DefaultTreeNode(new FileInfo("zcommon.jar", "ZK Common Library")),
		              new DefaultTreeNode(new FileInfo("zk.jar", "ZK Core Library"))
		            }),
		          new DefaultTreeNode(new FileInfo("/src", "Source Code")),
		          new DefaultTreeNode(new FileInfo("/xsd", "XSD Files"))
		        })
		      }
		  ));
		int index = 0;
	]]></zscript>
	<tree model="${model}">
		<template name="model">
			<treeitem context="menupopup">
				<treerow>
					<treecell label="${each.data.path}"/>
					<treecell label="${each.data.description}"/>
				</treerow>
			</treeitem>
		</template>
	    <treecols>
	        <treecol label="Path"/>
	        <treecol label="Description"/>
	    </treecols>
	</tree>
	<!-- Based on TreeitemRenderer -->
	<zscript><![CDATA[
		public class FiledInfoRenderer implements TreeitemRenderer {
			public void render(Treeitem item, Object data) throws Exception {
				FileInfo fi = (FileInfo) ((DefaultTreeNode)data).getData();
				Treerow tr;
				if (item.getTreerow()==null) {
					tr = new Treerow();
					tr.setParent(item);
				} else {
					tr = item.getTreerow();
					tr.getChildren().clear();
				}
				tr.appendChild(new Treecell(fi.path));
				tr.appendChild(new Treecell(fi.description));
				item.setValue(data);
				item.setContext(menupopup);
			}
		}
		TreeitemRenderer render = new FiledInfoRenderer();
	]]></zscript>
	<tree model="${model}" itemRenderer="${render}">
	    <treecols>
	        <treecol label="Path"/>
	        <treecol label="Description"/>
	    </treecols>
	</tree>
</zk>
